import 'package:flutter/material.dart';

import 'package:url_launcher/url_launcher.dart';



class GovernmentSchemesPage extends StatelessWidget {
  const GovernmentSchemesPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('рж╕рж░ржХрж╛рж░рж┐ рж╕рж╛рж╣рж╛ржпрзНржп ржУ ржкрзНрж░ржХрж▓рзНржкрж╕ржорзВрж╣'),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            const Text(
              'ржЖржо ржЪрж╛рж╖рж┐ржжрзЗрж░ ржЬржирзНржп рж╕рж░ржХрж╛рж░рзА рж╕рж╣рж╛ржпрж╝рждрж╛',
              style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 16),

            const Text(
              'ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ рж╕рж░ржХрж╛рж░ ржЖржо ржЪрж╛рж╖рж┐ржжрзЗрж░ рж╕рж╣рж╛ржпрж╝рждрж╛рж░ ржЬржирзНржп ржХржпрж╝рзЗржХржЯрж┐ ржЙржжрзНржпрзЛржЧ ржирж┐ржпрж╝рзЗржЫрзЗ:',
              style: TextStyle(fontSize: 16),
              textAlign: TextAlign.justify,
            ),
            const SizedBox(height: 12),

            const BulletPoint(text: 'ЁЯМ▒ ржЖржо ржЪрж╛рж╖рж┐ржжрзЗрж░ ржЬржирзНржп рж╕рж╛рж░ ржУ ржХрзАржЯржирж╛рж╢ржХрзЗрж░ ржЫрж╛ржбрж╝ред'),
            const BulletPoint(text: 'ЁЯУж ржкрзНржпрж╛ржХрзЗржЬрж┐ржВ ржУ рж╢рзАрждрж▓ рж╕ржВрж░ржХрзНрж╖ржг рж╕рзБржмрж┐ржзрж╛рж░ ржЬржирзНржп ржЕржирзБржжрж╛ржиред'),
            const BulletPoint(text: 'ЁЯУ▓ ржЙрзОржкрж╛ржжржи ржмрж╛ржбрж╝рж╛рждрзЗ ржПржмржВ рж░рзЛржЧ ржХржорж╛рждрзЗ рж╕рзНржорж╛рж░рзНржЯ ржХрзГрж╖рж┐ ржЕрзНржпрж╛ржк рж╕ржорж░рзНржержиред'),
            const BulletPoint(text: 'ЁЯЪЪ ржЖржо ржмрж╛ржЬрж╛рж░рзЗ ржкрж░рж┐ржмрж╣ржирзЗрж░ ржЬржирзНржп ржЫрж╛ржбрж╝ржкрзНрж░рж╛ржкрзНржд ржкрж░рж┐ржмрж╣ржиред'),
            const BulletPoint(text: 'ЁЯУИ ржЖржзрзБржирж┐ржХ ржЪрж╛рж╖рж╛ржмрж╛ржж ржУ ржЬрзИржм ржкржжрзНржзрждрж┐ рж╕ржорзНржкрж░рзНржХрзЗ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрж░рзНржорж╕рзВржЪрж┐ред'),

            const SizedBox(height: 24),
            const Text(
              'ЁЯзн ржЪрзАржирзЗ ржЖржо рж░ржкрзНрждрж╛ржирж┐',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8),
            const Text(
              'рзирзжрзирзк рж╕рж╛рж▓рзЗ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржЪрзАржирзЗ ржЖржо рж░ржкрзНрждрж╛ржирж┐ рж╢рзБрж░рзБ ржХрж░рзЗржЫрзЗред ржкрзНрж░ржержо ржмржЫрж░рзЗ рзз,рзирзжрзж ржорзЗржЯрзНрж░рж┐ржХ ржЯржирзЗрж░ ржмрзЗрж╢рж┐ ржЖржо рж░ржкрзНрждрж╛ржирж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржПрждрзЗ рж╕рзНржерж╛ржирзАржпрж╝ ржЪрж╛рж╖рж┐ржжрзЗрж░ ржЖржпрж╝рзЗрж░ рж╕рзБржпрзЛржЧ ржмрзГржжрзНржзрж┐ ржкрзЗржпрж╝рзЗржЫрзЗ, ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржмрж╛ржЬрж╛рж░рзЗ ржкрзНрж░ржмрзЗрж╢ ржЦрзБрж▓рзЗржЫрзЗ, ржПржмржВ GAP (ржЧрзБржб ржПржЧрзНрж░рж┐ржХрж╛рж▓ржЪрж╛рж░рж╛рж▓ ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕рзЗрж╕) рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗрж╢ржи ржЙрзОрж╕рж╛рж╣рж┐ржд рж╣ржпрж╝рзЗржЫрзЗред',
              style: TextStyle(fontSize: 16),
              textAlign: TextAlign.justify,
            ),
            const SizedBox(height: 16),

            ClipRRect(
              borderRadius: BorderRadius.circular(12),
              child: Image.asset(
                'assets/export_crates.webp',
                fit: BoxFit.cover,
              ),
            ),
            const SizedBox(height: 6),
            const Text(
              'рж╕рж░ржХрж╛рж░рж┐ рждрждрзНрждрзНржмрж╛ржмржзрж╛ржирзЗ рж░ржкрзНрждрж╛ржирж┐рж░ ржЬржирзНржп ржЖржо ржкрзНржпрж╛ржХрзЗржЯрж┐ржВ рж╣ржЪрзНржЫрзЗред',
              style: TextStyle(fontSize: 14, fontStyle: FontStyle.italic),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 16),

            ClipRRect(
              borderRadius: BorderRadius.circular(12),
              child: Image.asset(
                'assets/mango_trade.webp',
                fit: BoxFit.cover,
              ),
            ),
            const SizedBox(height: 6),
            const Text(
              'ржврж╛ржХрж╛ржпрж╝ ржЕржирзБрж╖рзНржарж┐ржд ржмрж╛ржВрж▓рж╛ржжрзЗрж╢-ржЪрзАржи ржЖржо рж░ржкрзНрждрж╛ржирж┐ ржЪрзБржХрзНрждрж┐ рж╕рзНржмрж╛ржХрзНрж╖рж░ ржЕржирзБрж╖рзНржарж╛ржиред',
              style: TextStyle(fontSize: 14, fontStyle: FontStyle.italic),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 16),

            ClipRRect(
              borderRadius: BorderRadius.circular(12),
              child: Image.asset(
                'assets/mango_farmer.jpg',
                fit: BoxFit.cover,
              ),
            ),
            const SizedBox(height: 6),
            const Text(
              'ржЪрзАржирзЗрж░ ржЧрзБржгржЧржд ржорж╛ржи ржорзЗржирзЗ ржЖржо рж░ржкрзНрждрж╛ржирж┐рж░ ржЬржирзНржп ржкрзНрж░рж╕рзНрждрзБржд ржЖржо рж╕ржВржЧрзНрж░рж╣ ржХрж░ржЫрзЗржи ржПржХ ржЖржо ржЪрж╛рж╖рж┐ред',
              style: TextStyle(fontSize: 14, fontStyle: FontStyle.italic),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),

            const Text(
              'ЁЯСЙ ржПржЗ ржкрзНрж░ржХрж▓рзНржкржЧрзБрж▓рзЛрж░ ржЬржирзНржп ржЖржмрзЗржжржи ржХрж░рждрзЗ ржПржмржВ рж░ржкрзНрждрж╛ржирж┐ рж╕ржиржжржкрждрзНрж░ ржУ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг рж╕рзБржмрж┐ржзрж╛ ржкрзЗрждрзЗ ржЖржкржирж╛рж░ ржирж┐ржХржЯрж╕рзНрже ржХрзГрж╖рж┐ рж╕ржорзНржкрзНрж░рж╕рж╛рж░ржг ржЕржлрж┐рж╕рзЗ ржпрж╛ржиред',
              style: TextStyle(fontSize: 16),
            ),

            const SizedBox(height: 20),

            const Text(
              'ЁЯПе рж╕рж╛рж░рж╛ржжрзЗрж╢рзЗ ржЙржкржЬрзЗрж▓рж╛ рж╕рзНржмрж╛рж╕рзНржерзНржп ржХржоржкрзНрж▓рзЗржХрзНрж╕',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8),
            const Text(
              'ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗ ржмрж░рзНрждржорж╛ржирзЗ ржорзЛржЯ рзкрзпрзлржЯрж┐ ржЙржкржЬрзЗрж▓рж╛ рж╕рзНржмрж╛рж╕рзНржерзНржп ржХржоржкрзНрж▓рзЗржХрзНрж╕ рж░ржпрж╝рзЗржЫрзЗ ржпрж╛ ржХрзГрж╖ржХржжрзЗрж░ рж╕рзНржмрж╛рж╕рзНржерзНржп рж╕рж╣рж╛ржпрж╝рждрж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рзЗред ржЪрж╛рж╖рж╛ржмрж╛ржжрзЗ ржмрзНржпржмрж╣рзГржд рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржУ ржХрзАржЯржирж╛рж╢ржХрзЗрж░ ржкрзНрж░ржнрж╛ржмржЬржирж┐ржд рж╕ржорж╕рзНржпрж╛рж░ ржЬржирзНржп ржПржЧрзБрж▓рзЛ рждрж╛рзОржХрзНрж╖ржгрж┐ржХ ржЪрж┐ржХрж┐рзОрж╕рж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рзЗ ржерж╛ржХрзЗред',
              style: TextStyle(fontSize: 16),
              textAlign: TextAlign.justify,
            ),
            const Text(
              'ЁЯСЙ ржПржЗ ржкрзНрж░ржХрж▓рзНржкржЧрзБрж▓рзЛрж░ ржЬржирзНржп ржЖржмрзЗржжржи ржХрж░рждрзЗ ржПржмржВ рж░ржкрзНрждрж╛ржирж┐ рж╕ржиржжржкрждрзНрж░ ржУ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг рж╕рзБржмрж┐ржзрж╛ ржкрзЗрждрзЗ ржЖржкржирж╛рж░ ржирж┐ржХржЯрж╕рзНрже ржХрзГрж╖рж┐ рж╕ржорзНржкрзНрж░рж╕рж╛рж░ржг ржЕржлрж┐рж╕рзЗ ржпрж╛ржиред',
              style: TextStyle(fontSize: 16),
            ),
            const SizedBox(height: 20),

            const Text(
              'ЁЯМР ржЕржирж▓рж╛ржЗржи рж╕рж╣рж╛ржпрж╝рждрж╛:',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),

            InkWell(
              onTap: () async {
                final url = 'https://www.dae.gov.bd/';
                final uri = Uri.parse(url);
                if (await canLaunchUrl(uri)) {
                  await launchUrl(uri, mode: LaunchMode.externalApplication);
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('ржУрзЯрзЗржмрж╕рж╛ржЗржЯржЯрж┐ ржЦрзЛрж▓рж╛ ржпрж╛рзЯржирж┐: $url')),
                  );
                }
              },
              child: const Text(
                'ржХрзГрж╖рж┐ рж╕ржорзНржкрзНрж░рж╕рж╛рж░ржг ржЕржзрж┐ржжржкрзНрждрж░рзЗрж░ ржУрзЯрзЗржмрж╕рж╛ржЗржЯ ржжрзЗржЦрзБржи',
                style: TextStyle(
                  fontSize: 16,
                  color: Colors.blue,
                  decoration: TextDecoration.underline,
                ),
              ),
            ),

            const SizedBox(height: 20),

            const Text(
              'ЁЯМР ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рж╕рж░ржХрж╛рж░рж┐ ржУ ржХрзГрж╖рж┐ рж╕рж╣рж╛ржпрж╝рждрж╛ рж▓рж┐ржВржХ',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8),
            LinkTile(
              title: 'ржХрзГрж╖рж┐ рждржерзНржп рж╕рж╛рж░рзНржнрж┐рж╕ (AIS)',
              url: 'http://www.ais.gov.bd/',
              icon: Icons.agriculture,
            ),
            LinkTile(
              title: 'ржХрзГрж╖рж┐ рж╕ржорзНржкрзНрж░рж╕рж╛рж░ржг ржЕржзрж┐ржжржкрзНрждрж░ (DAE)',
              url: 'http://www.dae.gov.bd/',
              icon: Icons.home_repair_service,
            ),
            LinkTile(
              title: 'ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржЧрзЗржЯржУржпрж╝рзЗ (ржЬрж╛рждрзАржпрж╝ рждржерзНржп ржмрж╛рждрж╛ржпрж╝ржи)',
              url: 'http://www.bangladesh.gov.bd/',
              icon: Icons.language,
            ),
            LinkTile(
              title: 'ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржХрзГрж╖рж┐ ржЧржмрзЗрж╖ржгрж╛ ржЗржирж╕рзНржЯрж┐ржЯрж┐ржЙржЯ (BARI)',
              url: 'http://www.bari.gov.bd/',
              icon: Icons.science,
            ),
            ListTile(
              leading: const Icon(Icons.link, color: Colors.blue),
              title: const Text(
                'ЁЯСитАНЁЯМ╛ ржХрзГрж╖ржХржжрзЗрж░ рж╕рж╣рж╛ржпрж╝рждрж╛рж░ ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ',
                style: TextStyle(fontSize: 16, decoration: TextDecoration.underline),
              ),
              onTap: () async {
                final url = 'https://www.dae.gov.bd/'; // Replace with desired URL
                final uri = Uri.parse(url);
                if (await canLaunchUrl(uri)) {
                  await launchUrl(uri, mode: LaunchMode.externalApplication);
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('рж▓рж┐ржВржХ ржЦрзЛрж▓рж╛ ржпрж╛ржпрж╝ржирж┐: $url')),
                  );
                }
              },
            ),

          ],
        ),
      ),
    );
  }
}

class BulletPoint extends StatelessWidget {
  final String text;
  const BulletPoint({required this.text});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const Text('тАв ', style: TextStyle(fontSize: 18)),
          Expanded(
            child: Text(
              text,
              style: const TextStyle(fontSize: 16),
            ),
          ),
        ],
      ),
    );
  }
}

class LinkTile extends StatelessWidget {
  final String title;
  final String url;
  final IconData icon;

  const LinkTile({
    required this.title,
    required this.url,
    required this.icon,
  });

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6),
      child: InkWell(
        onTap: () {
          ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(content: Text('рж▓рж┐ржВржХ ржЦрзБрж▓рзБржи: $url')),
          );
          // Optional: You can use url_launcher package to actually open the link
        },
        child: Row(
          children: [
            Icon(icon, color: Colors.green.shade700),
            const SizedBox(width: 10),
            Expanded(
              child: Text(
                title,
                style: const TextStyle(
                  fontSize: 16,
                  color: Colors.blue,
                  decoration: TextDecoration.underline,
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
